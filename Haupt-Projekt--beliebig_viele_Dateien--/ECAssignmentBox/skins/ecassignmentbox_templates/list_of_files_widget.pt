<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      xml:lang="en" lang="en"
      i18n:domain="eduComponents">
      
      <!--author: Tim Sabsch <t.sabsch@arcor.de> -->

  <body>

    <metal:define define-macro="search">
      <metal:use use-macro="here/widgets/field/macros/edit" />
    </metal:define>

    <metal:define define-macro="edit">
      <metal:use use-macro="here/widgets/field/macros/edit">
        <metal:fill fill-slot="widget_body" tal:define="submission accessor">
	  <tal:repeat repeat="file submission">
	    <metal:use use-macro="here/list_of_files_widget/macros/file_edit"/>
	    <br>
	  </tal:repeat>
        </metal:fill>
      </metal:use>
    </metal:define>

    <metal:define define-macro="view" tal:define="submission accessor">
      <tal:repeat repeat="file submission">
        <p>
	  <metal:use use-macro="here/list_of_files_widget/macros/content" />
	  <metal:use use-macro="here/list_of_files_widget/macros/file_view" />
	</p>      
      </tal:repeat>      
    </metal:define>

    <metal:define define-macro="content">
      <pre tal:define="cnt python: context.get_data(file)"
           tal:condition="cnt"
           tal:content="cnt" />
    </metal:define>
    
    <!--compare here/widgets/file/macros/view-->
    <span metal:define-macro="file_view">
      <metal:label define-slot="widget_label" />
      <tal:define define="showLink showLink|python:1">
        <tal:block define="size file/getSize | python:file and len(file) or 0;
                           icon file/getBestIcon | nothing;
                           filename file/getFilename;
                           size_kb python:size/1024;
			   display_size_kb python:'{0:n} kB'.format(size_kb) if size_kb > 0 else '';
			   display_size_bytes python:' ({0:n} bytes)'.format(size) if display_size_kb else '{0:n} bytes'.format(size);
			   display_size python:'{0}{1}'.format(display_size_kb, display_size_bytes)"
                   condition="python:size &gt; 0">

	  <tal:link condition="showLink">
	    <a href="" tal:attributes="href string:${context/absolute_url}/at_download/$fieldName">
	      <img tal:condition="icon" src="" alt=""
	           tal:attributes="src string:${context/portal_url}/$icon"/>
	      <tal:filename tal:replace="filename | fieldName"/>
	    </a>
	    <span class="discreet">
	      &mdash;
	      <span tal:replace="python:context.lookupMime(file.getContentType())">ContentType</span>,
	      <tal:size content="display_size">?</tal:size>
	    </span>
	  </tal:link>
	  <span tal:condition="not:showLink">
	    <img tal:condition="icon" src="" alt=""
	         tal:attributes="src string:${context/portal_url}/$icon"/>
	    <tal:filename tal:replace="filename | fieldName"/>
	    <span class="discreet">
	      <span tal:content="python:context.lookupMime(file.getContentType())">ContentType</span> 
	      &mdash;
	      <tal:size content="display_size">?</tal:size>
	    </span>
	  </span>

        </tal:block>
      </tal:define>
    </span>
    
    <metal:define define-macro="file_edit" tal:define="showLink python:0">
      <metal:block use-macro="here/list_of_files_widget/macros/file_view" />
	<div tal:condition="accessor" 
	     tal:define="filename file/getFilename;
		         cnt python: context.get_data(file)"
	     style="padding-top:1em;">
	     
	  <dl class="collapsible inline collapsedOnLoad">
	    <dt class="collapsibleHeader"
	  	i18n:translate="file_edit">Text area</dt>
	    <dd class="collapsibleContent">
	        <textarea cols="30"
		          rows="15"
	  	          name="answer"
	  		  tal:content="cnt | nothing"></textarea>
	    </dd>
	  </dl>	    
	    
	  <div style="padding-left:1.5em;padding-top:0.5em;">
	    <metal metal:use-macro="here/list_of_files_widget/macros/file_upload"/>
	  </div>
	</div>
	<div tal:condition="not: accessor">
	  <metal metal:use-macro="here/list_of_files_widget/macros/file_upload"/>
      </div>
    </metal:define>
    
    
    <metal:define define-macro="file_upload">
      <input type="file"
             name="file"/>
    </metal:define>
    
    
  </body>
</html>
<!-- Keep this comment at the end of the file
Local variables:
mode:xml
sgml-local-catalogs:("/usr/local/lib/sgml/XHTML11.cat")
sgml-validate-command:"xmllint \\-\\-valid \\-\\-noout %s %s"
sgml-indent-step:2
sgml-indent-data:t
fill-column:79
End:
-->
